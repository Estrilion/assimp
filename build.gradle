import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'maven'
    id 'java'
    id 'java-library'
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "com.github.johnrengelman.shadow" version '4.0.4'
}

// jitpack
group = 'com.github.kotlin-graphics'

ext {
    moduleName = 'com.github.kotlin_graphics.gli'
    kotlin = 'org.jetbrains.kotlin:kotlin'
    kotlin_version = '1.3.21'
    kotlintest_version = '3.2.1'

    // kotlin-graphics
    //uno_version = '60edf33067835253aa30ac79bd5129363fee953f'  // CLEANUP remove
    kool_version = 'dependency-SNAPSHOT'
    glm_version = 'dependency-SNAPSHOT'
    gli_version = 'dependency-SNAPSHOT'

    lwjgl_version = "3.2.2-SNAPSHOT"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "$kotlin-stdlib"
    implementation "$kotlin-reflect"

    //api "com.github.kotlin-graphics:uno-sdk:$uno_version" // CLEANUP remove
    api "com.github.kotlin-graphics:kool:$kool_version"
    api "com.github.kotlin-graphics:glm:$glm_version"
    api "com.github.kotlin-graphics:gli:$gli_version"

    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()

    testImplementation "com.github.kotlin-graphics.glm:glm-test:$glm_version"

    implementation 'io.github.microutils:kotlin-logging:1.6.24'

//    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'

    //implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
	implementation 'org.slf4j:slf4j-api:1.7.26'
    testImplementation 'org.slf4j:slf4j-simple:1.7.26'

    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        runtime "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }
}

repositories {
    mavenCentral()
    maven { setUrl("https://dl.bintray.com/kotlin/kotlin-dev") }
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { setUrl('https://jitpack.io') }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

test {
    useJUnitPlatform()

    systemProperties['junit.jupiter.execution.parallel.enabled'] = true 
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1 
    forkEvery = 1
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

shadowJar.archiveClassifier = 'all'