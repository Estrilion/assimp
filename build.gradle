import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'maven'
    id 'java'
    id 'java-library'
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "com.github.johnrengelman.shadow" version '5.1.0'
}

// jitpack
group = 'com.github.kotlin-graphics'

ext {
    moduleName = 'com.github.kotlin_graphics.assimp'
    kotlin = 'org.jetbrains.kotlin:kotlin'
    kotlin_version = '1.3.41'
    kotlintest_version = '3.3.3'
    uno_version = 'f655c0f467ba994d6e63f76118c1b3f9cdd4247f'
//    vkk_version = '76f2ba33afd38716c0a3036359b895f1e93dff29'
//    gln_version = '6ce8058b1b904e50a2d22c5e918c2047086044ba'
    gli_version = '414aef014802ee274ca41a32ebcea1c54ef449a7'
    glm_version = '62dff2baa0b4cab738d55d7e41dee4c796e6cdfc'
    glmTest_version = 'a1cafbd4e1bda500291b19a8d0cb75374f97688c'
    unsigned_version = 'a530a8f63eda75a499e06beac468f0398526f5a4'
    kool_version = '1d9a690fd33e62621d55bcb6843042390a21ae31'
    lwjgl_version = "3.2.2"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "$kotlin-stdlib"
    implementation "$kotlin-reflect"

    def kx = "com.github.kotlin-graphics"
    implementation "${kx}.uno-sdk:uno-core:$uno_version"
//    implementation "${kx}:gln:$gln_version"
    implementation "$kx:gli:$gli_version"
    implementation "${kx}.glm:glm:$glm_version"
    implementation "$kx:kool:$kool_version"
    implementation "$kx:kotlin-unsigned:$unsigned_version"

    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version"

    testImplementation "com.github.kotlin-graphics.glm:glm-test:$glmTest_version"

    implementation 'io.github.microutils:kotlin-logging:1.6.26'

//    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'

    implementation 'org.slf4j:slf4j-api:1.7.26'
    testImplementation 'org.slf4j:slf4j-simple:1.7.26'

    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        runtime "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

test {
    useJUnitPlatform()

//    systemProperties['junit.jupiter.execution.parallel.enabled'] = true
//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
//    forkEvery = 1
}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

compileKotlin {
    // Enable Kotlin compilation to Java 8 class files with method parameter name metadata
    kotlinOptions {
        jvmTarget = "1.8"
//        javaParameters = true
    }
    // As per https://stackoverflow.com/a/47669720
    // See also https://discuss.kotlinlang.org/t/kotlin-support-for-java-9-module-system/2499/9
    destinationDir = compileJava.destinationDir
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
//        javaParameters = true
    }
}

compileJava {
    dependsOn(':compileKotlin')
    doFirst {
        options.compilerArgs = ['--module-path', classpath.asPath,]
        classpath = files()
    }
}

shadowJar.archiveClassifier = 'all'